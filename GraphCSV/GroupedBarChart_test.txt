<!DOCTYPE>
<meta charset="utf-8">
<style>

body {
  width: 960px;
  margin: auto;
  font-family: Helvetica;
}
.chart {
  margin-bottom: 40px;
}
.radar-title {
  font-size: 18px;
  font-weight: bold;
  fill: #333;
}
.radar-label {
  font-size: 11px;
  fill: #666;
}
.radar-origin {
  fill: #999;
}
.radar-axis {
  stroke: #999;
  stroke-width: 1px;
  stroke-dasharray: 1 2;
}
.radar-path {
  stroke: #333;
  stroke-width: 1px;
  
  fill: #333;
  fill-opacity: 0.75;
}

</style>

<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="radar.js"></script>
<script>

var width = 140;
var margin = 50;
var labelMargin = 10;

var scale = d3.scale.linear()
  .domain([0, 5])
  .range([5, 100])

d3.csv('whiskies.csv')
  .row(function(d) {
      d.Body = +d.Body;
      d.Sweetness = +d.Sweetness;
      d.Smoky = +d.Smoky;
      d.Medicinal = +d.Medicinal;
      d.Tobacco = +d.Tobacco;
      d.Honey = +d.Honey;
      d.Spicy = +d.Spicy;
      d.Winey = +d.Winey;
      d.Nutty = +d.Nutty;
      d.Malty = +d.Malty;
      d.Fruity = +d.Fruity;
      d.Floral = +d.Floral;
      return d;
  })
  .get(function(error, rows) {
    var radar = radarChart()
      .width(width)
      .accessors([
        function(d) { return scale(d.Body); },
        function(d) { return scale(d.Smoky); },
        function(d) { return scale(d.Tobacco); },
        function(d) { return scale(d.Medicinal); },
        function(d) { return scale(d.Winey); },
        function(d) { return scale(d.Spicy); },
        function(d) { return scale(d.Malty); },
        function(d) { return scale(d.Nutty); },
        function(d) { return scale(d.Honey); },
        function(d) { return scale(d.Sweetness); },
        function(d) { return scale(d.Fruity); },
        function(d) { return scale(d.Floral); },
      ])
      .labels([
        'Body',
        'Smoky',
        'Tobacco',
        'Medicinal',
        'Winey',
        'Spicy',
        'Malty',
        'Nutty',
        'Honey',
        'Sweetness',
        'Fruity',
        'Floral',
      ])
      .title(function(d) { return (d.Distillery); })
      .margin(margin)
      .labelMargin(labelMargin)

    rows.forEach(function(d) {
      d3.select('body').append('svg')
        .attr('class', 'chart')
        .attr('height', width + (2 * margin))
        .attr('width', width + (2 * margin))
        .append('g')
          .attr('transform', 'translate(' + margin / 2 + ',' + margin / 2 + ')')
          .datum(d)
          .call(radar)

      radar.includeAxis(true);
    });
  });
  
  function radarChart() {
  var width = 400;
  var margin = 0;
  var labelMargin = 0;
  var includeAxis = true;
  var accessors = [];
  var labels = [];
  var title = function(d) { return; };
 
  var g;
  var datum;
  var radius = width / 2;
  var origin = margin + radius;
  var radii = accessors.length;
  var radians = 2 * Math.PI / radii;
 
  function chart(selection) {
    datum = selection.datum();
    g = selection.append('g');
 
    if (includeAxis) {
      drawAxis();
    }
 
    drawChart();
  }
 
  chart.accessors = function(_) {
    if (!arguments.length) return accessors;
    accessors = _;
    radii = accessors.length;
    radians = 2 * Math.PI / radii;
    return chart;
  };
 
  chart.width = function(_) {
    if (!arguments.length) return width;
    width = _;
    radius = width / 2;
    origin = margin + radius;
    return chart;
  };
 
  chart.margin = function(_) {
    if (!arguments.length) return margin;
    margin = _;
    origin = margin + radius;
    return chart;
  };
 
  chart.labelMargin = function(_) {
    if (!arguments.length) return labelMargin;
    labelMargin = _;
    return chart;
  };
 
  chart.title = function(_) {
    if (!arguments.length) return title;
    title = _;
    return chart;
  };
 
  chart.labels = function(_) {
    if (!arguments.length) return labels;
    labels = _;
    return chart;
  };
 
  chart.includeAxis = function(_) {
    if (!arguments.length) return includeAxis;
    includeAxis = _;
    return chart;
  };
 
  function drawAxis() {
    var r = 0;
    accessors.forEach(function(d, i) {
      var x = radius * Math.cos(r);
      var y = radius * Math.sin(r);
      g.append('line')
        .attr('class', 'radar-axis')
        .attr('x1', origin)
        .attr('y1', origin)
        .attr('x2', origin + x)
        .attr('y2', origin + y)
 
      x = (radius + labelMargin) * Math.cos(r);
      y = (radius + labelMargin) * Math.sin(r);
      g.append('text')
        .attr('class', 'radar-label')
        .attr('x', origin + x)
        .attr('y', origin + y)
        .text(labels[i])
        .style('text-anchor', 'middle')
        .style('dominant-baseline', 'central')
 
      r += radians;
    })
  }
 
  function drawChart() {
    g.append('circle')
      .attr('class', 'radar-origin')
      .attr('cx', origin)
      .attr('cy', origin)
      .attr('r', 2)
 
    var path = d3.svg.line.radial()
    var scale = d3.scale.linear()
      .domain([0, 100])
      .range([0, radius])
 
    var pathData = [];
    var r = Math.PI / 2;
    accessors.forEach(function(d) {
      pathData.push([
        scale(d(datum)),
        r
      ])
      r += radians;
    });
 
    g.append('path')
      .attr('class', 'radar-path')
      .attr('transform', 'translate(' + origin + ',' + origin + ')')
      .attr('d', path(pathData) + 'Z');
 
    g.append('text')
      .attr('class', 'radar-title')
      .attr('x', origin)
      .attr('y', 0)
      .text(title(datum))
      .style('text-anchor', 'middle')
  }
 
  return chart;
}

</script>
</body>